1、1对多查询建议使用延迟加载查询数据，1对1建议使用立即加载查询数据，个人认为具体使用还是要看业务场景
    1.1 延迟加载=懒加载	用到数据的时候进行加载，不需要用到数据时就不加载
    1.2 mybatis优化手段之一, 先查单表，需要时查询多表。提升数据库性能
    1.3 当数据量大时使用延迟加载，查询时间过长。
    1.4 sql的xml文件配置fechtype为lazy  sql将进行延迟加载
    1.5 当使用到对应属性的时候，将执行延迟加载的sql语句来获得数据
    1.6 全局延迟加载 将sql的xml配置setting 设置 lazyLoadingEnabled 的值为true
    1.7 局部的加载策略高于全局的加载策略
2、延迟加载底层原理
    2.1 CGLIB或javassist(默认)动态代理
    2.2 调用延迟加载的属性时，会进入拦截器方法 invoke  
    2.3 invoke发现属性需要延迟加载，会发送事先保存好的sql语句 再set进对应的属性 
    2.4 通过代理拦截指定方法，进行延迟加载操作
3、延迟加载源码
    3.1 默认使用javassist产生代理对象
    3.2 invoke会根据当前调用方法来判断是否需要拦截查看延迟加载配置，拿到属性后再判断属性是否需要执行延迟加载 是则发送sql语句执行操作
    3.2 在进行set的时候会删除对应的延迟加载属性 表示这个属性已经加载完毕  不需要再进行延迟加载
